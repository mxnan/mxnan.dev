---
import { SITE_TITLE, SITE_DESCRIPTION } from "../constants";
import Navbar from "../components/Navbar.astro";
import Footer from "../components/Footer.astro";
import type { MarkdownInstance } from "astro";
import type { Frontmatter } from "../constants";

// Define an interface for the component props
interface Props {
  // pageTitle is an optional string
  pageTitle?: string;
  // frontmatter is an object of type MarkdownInstance<Frontmatter>['frontmatter']
  frontmatter: MarkdownInstance<Frontmatter>["frontmatter"];
}

// Destructure the pageTitle and frontmatter props from Astro.props
const { pageTitle } = Astro.props;
const { frontmatter } = Astro.props;

// Safely destructure the frontmatter properties
const { title, description, ogImage, author } = frontmatter ?? {};
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    {/* Render the page title dynamically */}
    <title>{pageTitle ? `${pageTitle} | ${SITE_TITLE}` : SITE_TITLE}</title>
    <meta name="description" content={SITE_DESCRIPTION} />
    {/* Render Open Graph meta tags if frontmatter is available */}
    {
      frontmatter && (
        <>
          <meta property="og:title" content={title} />
          <meta property="og:description" content={description} />
          <meta property="og:image" content={ogImage} />
          <meta property="og:author" content={author} />
        </>
      )
    }</head
  >
  <body class="bg-zinc-900 text-stone-200 max-w-3xl mx-auto">
    <Navbar />
    <main>
      <slot />
    </main>
    <Footer />
  </body>
</html>
